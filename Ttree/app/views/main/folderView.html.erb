<%= stylesheet_link_tag    'application', home: 'all', 'data-turbolinks-track': 'reload' %>
<%= render "layouts/probe" %>
<%= javascript_tag do %>
window.branchIdInFolder = "<%=@ancestry%>";
<% end %>
<script>
  var widthPosition =window.innerWidth||window.innerWidth||document.body.clientWidth;
  var addFolderCount = 0;
  var dropPosition=0; //바탕(0)인지 폴더(1)인지
  var makeWorkFolderContext = function() {
    $(".custom_menu").append("<li data-action='add_favorate'><img class='star_btn_context' src='/assets/star3.png' style='height:18px;width:18px;'/>&nbsp;&nbsp;Add favorate</li>");
    $(".custom_menu").append("<li data-action='change_name'><img class='edit_btn_context' src='/assets/edit.png' style='height:18px;width:18px;' />&nbsp;&nbsp;Change name</li>");
    $(".custom_menu").append("<li data-action='delete'><img class='delete_btn_context' src='/assets/close1.png' style='height:18px;width:18px;' />&nbsp;&nbsp;Delete</li>");
  }
  $(document).ready(function() {
    $('.work_container').width(widthPosition - $('.treeView').outerWidth());
    makeWorkFolderContext();
    /* 커스텀 context menu */
    // 해당 리스트와 겹치는 요소가 하나라도 있는지 체크하는 루틴
    var checkIntersection = function(target_list, obj_list) {
      var flag = false;
      $.each(target_list, function(target_idx, target_val) {
        $.each(obj_list, function(obj_idx, obj_val) {
          if (target_val == obj_val) {
            flag = true;
            return;
          }
        });
      });
      if (flag === true)
        return true;
      return false;
    }
    // context menu가 나타났을때 액션 정의
    $(document).bind("contextmenu", function(e) {
      var bind_list = ["userWork", "personal_team_content", "_folder_exist", "_foldername"]
      var target_class = $(e.target).attr("class").split(" ");
      if (checkIntersection(bind_list, target_class) === true) {
      //if (bind_list.include("userWork")) {
        e.preventDefault();
        $(".custom_menu").finish().toggle().
        css({
          top: e.pageY,
          left: e.pageX
        });
      }
    });
    // context menu 밖을 눌렀을 경우
    $(document).bind("mousedown", function(e) {
      if (!($(e.target).parents(".custom_menu").length > 0)) {
        $(".custom_menu").hide();
      }
    })
    // context menu 안의 요소를 클릭한 경우
    $(".custom_menu li").click(function() {
      switch ($(this).attr("data-action")) {
        case "add_favorate": alert("add"); break;
        case "change_name": alert("change"); break;
        case "delete": alert("delete"); break;
        case "first": alert("first"); break;
        case "second": alert("second"); break;
        case "third": alert("third"); break;
      }
      $(".custom_menu").hide();
    })
    /* */
    $(document).on("click", "._page", function() {
      popup = window.open($(this).data("url"),'_blank');
    });
    $(document).on("click", "._folder_exist", function() {
      popup = window.open(window.location.href + "/" + $(this).data("id"), '_self');
    })
    $(document).on("click", ".add_folder", function(e) {
      e.stopPropagation();
      if (addFolderCount == 0) {
        if (e.pageX > 150 + widthPosition / 2) {
          var x = e.pageX - 220;
        } else {
          var x = e.pageX;
        }
        var y = e.pageY;
        $("#create_folder_form").css({top:y, left:x});
        $("#create_folder_form").show();
        addFolderCount = 1;
      } else {
        $("#create_folder_form").hide();
        addFolderCount = 0;
      }
      $(".form_folder_btn").click(function() {
        $("create_folder_form").hide();
        addFolderCount = 0;
      })
    })
    $(document).click(function(e) {
      if (!$(e.target).is('#create_folder_form, #folder_form_main, #folder_form, .folder_form_element')) {
        $("#create_folder_form").hide();
        addFolderCount = 0;
      }
    })
    var folderFormCount = 0;
    $(document).on("click", ".folder_form_button", function(e) {
      e.preventDefault();
      $.fn.myFolderSerialize = function() {
        var returning = '';
          $('input', this).each(function() {
            if (this.value !== "")
              returning += '&' + this.value;
          })
        return returning.substring(1);
      }
      var formData = $("#folder_form").myFolderSerialize().split('&');
      //console.log(formData);
      if (formData.length != 1) {
        return;
      } else {
        <% if @branch.empty? %>
          var inputData = {"folder": {"name":formData[0], "work_id": <%= @work %>}}
        <% else %>
          var inputData = {"folder": {"name":formData[0], "work_id": <%= @work %>, "ancestry": '<%= @ancestry %>'}}
        <% end %>
        //alert(inputData);
      }
      folderFormCount++;
      if (folderFormCount == 1) {
        $.ajax({
          type:"POST",
          url:"/api/post/folder",
          contentType:"application/x-www-form-urlencoded; charset=UTF-8",
          cache: false,
          data: inputData,
          success:function(data) {
            //alert(error);
          },
          error:function(error) {
          }
        }).complete(function() {
          window.location = window.location.href;
        })
      }
    })
    $('.folder_outline').droppable({
      accept: '#page_alert, .pageCntBox, .pageli-2',
      drop: function(event, ui) {
        $(this).removeClass('folder_outline_color');
        var dataType=ui.helper.data("type");
        var branchID=$(this).children("._folder").data("id");
        //dataType에 따라 전달하는 데이터 다르게
        if(dataType=="page_alert"){
          alert(1)
          var inputData =
            {
              "branch_id": branchID,
              "user_id": userID,
              "dataType": "page_alert"
            };
        }
        else if(dataType=="pageCntBox"){
          var dataTimeNum=ui.helper.data("time");
          var inputData =
            {
              "branch_id": branchID,
              "user_id": userID,
              "dataType": "pageCntBox",
              "timenum": dataTimeNum
            };
        }
        else if(dataType=="pageli-2"){
          var pageId=ui.helper.data("id");
          //alert(pageId)
          var inputData =
            {
              "branch_id": branchID,
              "user_id": userID,
              "dataType": "pageli-2",
              "page_id": pageId
            };
        }
        $.ajax({
          type: "POST",
          url: "/api/post/addPage",
          contentType: "application/x-www-form-urlencoded; charset=UTF-8",
          cache: false,
          data: inputData
        }).complete(function() {
        })
      }, //drop
      over: function(event, ui) {
        console.log(1)
        $(this).addClass('folder_outline_color');
        $('.work_container').removeClass('work_container_color');
        dropPosition=1;
      },
      out: function(event, ui) {
        console.log(0)
        $(this).removeClass('folder_outline_color');
        $('.work_container').addClass('work_container_color');
        dropPosition=0;
      }
    }) //droppable
    $('.work_container').droppable({
      accept: '#page_alert, .pageCntBox, .pageli-2',
      drop: function(event, ui) {
        if(dropPosition==0){
          $(this).removeClass('work_container_color');
          var dataType=ui.helper.data("type");
          var branchID=branchIdInFolder;
          //dataType에 따라 전달하는 데이터 다르게
          if(dataType=="page_alert"){
            //alert(1)
            var inputData =
            {
              "branch_id": branchID,
              "user_id": userID,
              "dataType": "page_alert"
            };
          }
          else if(dataType=="pageCntBox"){
            //alert(2)
            var dataTimeNum=ui.helper.data("time");
            var inputData =
            {
              "branch_id": branchID,
              "user_id": userID,
              "dataType": "pageCntBox",
              "timenum": dataTimeNum
            };
          }
          else if(dataType=="pageli-2"){
            //alert(3)
            var pageId=ui.helper.data("id");
            //alert(pageId)
            var inputData =
            {
              "branch_id": branchID,
              "user_id": userID,
              "dataType": "pageli-2",
              "page_id": pageId
            };
          }
          $.ajax({
            type: "POST",
            url: "/api/post/addPage",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            cache: false,
            data: inputData
          }).complete(function() {
            if($('#page_alert_num').text()!=0)
              window.location = window.location.href;
          })
        }
      },
      over: function(event, ui) {
        $(this).addClass('work_container_color');
        dropPosition=0;
      },
      out: function(event, ui) {
        $(this).removeClass('work_container_color');
        dropPosition=1;
      }
    }) //droppable
    $('#page_alert').droppable({
      accept: '#page_alert, .pageCntBox, .pageli-2',
      drop: function(event, ui) {
        console.log("drop")
      },
      over: function(event, ui) {
        console.log("in")
      },
      out: function(event, ui) {
        console.log("out")
      }
    }) //droppable
  })//ready
  $(window).resize(function() {
    $('.work_container').width(widthPosition - 150);
  })
</script>
<div class="work_container" >
  <div class="branch_group group">
    <div class="folder_header">
      <div class="folder_title">Folders</div>
      <div class="purple_line"></div>
      <div class="gray_line"></div>
    </div>
    <div class="folder_group">
    <% if !@child_branches.nil? %>
      <% @child_branches.each do |branch| %>
        <div class=folder_outline>
          <div class="_folder _folder_exist folder_layout" data-id="<%= branch.id %>">
            <div class="_foldername folder_layout_name">
              <%= branch.name %>
            </div>
          </div>
        </div>
      <% end %>
    <% end %>
    <div class="add_folder _folder">
      <img class=create_work_btn src="/assets/create_work.png">
    </div>
  </div>
  </div>
  <div class="page_group group">
    <div class="folder_header">
      <div class="folder_title">Pages</div>
      <div class="purple_line"></div>
      <div class="gray_line"></div>
    </div>
    <div class="page_wrap">
    <% if !@child_pages.nil? %>
      <% @child_pages.each do |page| %>
        <div class="_page page_layout" data-url="<%= page.url %>">
          <img class="_page_img" src="http://ryugarden.org/api/thumb?url=<%= page.url %>"/>
          <div class="_page_url_div">
            <a class="_page_url"><%= page.title %></a>
          </div>
        </div>
      <% end %>
    <% end %>
    </div>
  </div>
  <p>
    uri: <%= @uri %>
  </p>
  <p>
    child_branches:
    <% if !@child_branches.nil? %>
      <% @child_branches.each do |branch| %>
        <%= branch.id %>
      <% end %>
    <% end %>
  </p>
  <p>
    child_pages:
    <% if !@child_pages.nil? %>
      <% @child_pages.each do |page| %>
        <%= page.title %>
      <% end %>
    <% end %>
  </p>
</div>
<div class="create_folder_form" id="create_folder_form">
  <div id="folder_form_main" class="folder_form_element">Create Folder</div>
  <img class="form_folder_btn" src="/assets/close1.png" />
  <form id="folder_form">
    <div id="folder_form_title" class="folder_form_element">Title</div>
    <input type="text" name="title" class="folder_input folder_form_element" />
  </form>
  <input type="button" class="folder_form_button" value="Create" />
</div>
<ul class="custom_menu">
</ul>
